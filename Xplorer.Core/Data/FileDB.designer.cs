#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Xplorer.Core.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dFileManager")]
	public partial class FileDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    #endregion
		
		public FileDBDataContext() : 
				base(global::Xplorer.Core.Properties.Settings.Default.dFileManagerConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public FileDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FileDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FileDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FileDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<File> Files
		{
			get
			{
				return this.GetTable<File>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spFMDelete")]
		public int spFMDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ObjectId", DbType="BigInt")] System.Nullable<long> objectId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), objectId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spFMDirectoryCopy")]
		public ISingleResult<File> spFMDirectoryCopy([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SourceId", DbType="BigInt")] System.Nullable<long> sourceId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TargeId", DbType="BigInt")] System.Nullable<long> targeId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TargetPath", DbType="VarChar(MAX)")] string targetPath, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedTime", DbType="DateTime")] System.Nullable<System.DateTime> lastModifiedTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreationTime", DbType="DateTime")] System.Nullable<System.DateTime> creationTime)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sourceId, targeId, targetPath, lastModifiedTime, creationTime);
			return ((ISingleResult<File>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spFMDirectoryCreate")]
		public ISingleResult<File> spFMDirectoryCreate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="VarChar(255)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Data", DbType="VarBinary(MAX)")] System.Data.Linq.Binary data, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreationTime", DbType="DateTime")] System.Nullable<System.DateTime> creationTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Attributes", DbType="SmallInt")] System.Nullable<short> attributes, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OriginalSize", DbType="BigInt")] System.Nullable<long> originalSize, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ParentId", DbType="BigInt")] System.Nullable<long> parentId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Permissions", DbType="SmallInt")] System.Nullable<short> permissions, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FullName", DbType="VarChar(MAX)")] string fullName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name, data, creationTime, attributes, originalSize, parentId, permissions, fullName);
			return ((ISingleResult<File>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spFMDirectoryMove")]
		public int spFMDirectoryMove([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(MAX)")] string source, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(MAX)")] string target, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(MAX)")] string targetParent, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(MAX)")] string trgDirName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> modifiedDateTime)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), source, target, targetParent, trgDirName, modifiedDateTime);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spFMFileCopy")]
		public int spFMFileCopy([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(MAX)")] string srcFileName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(MAX)")] string srcDirFullName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(MAX)")] string tgtFileName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string tgtExtension, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(MAX)")] string tgtDirFullName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> modifiedDateTime)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), srcFileName, srcDirFullName, tgtFileName, tgtExtension, tgtDirFullName, modifiedDateTime);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spFMFileMove")]
		public int spFMFileMove([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(MAX)")] string srcFileName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(MAX)")] string srcDirFullName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(MAX)")] string tgtFileName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string tgtExtension, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(MAX)")] string tgtDirFullName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> modifiedDateTime)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), srcFileName, srcDirFullName, tgtFileName, tgtExtension, tgtDirFullName, modifiedDateTime);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spFMFileRead")]
		public ISingleResult<File> spFMFileRead([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DirPath", DbType="VarChar(MAX)")] string dirPath, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FileName", DbType="VarChar(MAX)")] string fileName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dirPath, fileName);
			return ((ISingleResult<File>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spFMFileUpdate")]
		public int spFMFileUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DirPath", DbType="VarChar(MAX)")] string dirPath, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FileName", DbType="VarChar(MAX)")] string fileName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Data", DbType="VarBinary(MAX)")] System.Data.Linq.Binary data, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastModifiedTime", DbType="DateTime")] System.Nullable<System.DateTime> lastModifiedTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Attributes", DbType="SmallInt")] System.Nullable<short> attributes, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Extension", DbType="VarChar(10)")] string extension, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsZipped", DbType="Bit")] System.Nullable<bool> isZipped, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsEncrypted", DbType="Bit")] System.Nullable<bool> isEncrypted, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OriginalSize", DbType="BigInt")] System.Nullable<long> originalSize, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Permissions", DbType="SmallInt")] System.Nullable<short> permissions)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dirPath, fileName, data, lastModifiedTime, attributes, extension, isZipped, isEncrypted, originalSize, permissions);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spFMGetDirectories")]
		public ISingleResult<File> spFMGetDirectories([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DirId", DbType="BigInt")] System.Nullable<long> dirId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dirId);
			return ((ISingleResult<File>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spFMGetDirectoriesRecursive")]
		public ISingleResult<File> spFMGetDirectoriesRecursive([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DirId", DbType="BigInt")] System.Nullable<long> dirId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dirId);
			return ((ISingleResult<File>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spFMGetFiles")]
		public ISingleResult<File> spFMGetFiles([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DirId", DbType="BigInt")] System.Nullable<long> dirId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dirId);
			return ((ISingleResult<File>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spFMGetFilesRecursive")]
		public ISingleResult<File> spFMGetFilesRecursive([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DirId", DbType="BigInt")] System.Nullable<long> dirId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dirId);
			return ((ISingleResult<File>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spFMGetFileSystemEntries")]
		public ISingleResult<File> spFMGetFileSystemEntries([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DirId", DbType="BigInt")] System.Nullable<long> dirId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dirId);
			return ((ISingleResult<File>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spFMGetFileSystemEntriesRecursive")]
		public ISingleResult<File> spFMGetFileSystemEntriesRecursive([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DirId", DbType="BigInt")] System.Nullable<long> dirId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dirId);
			return ((ISingleResult<File>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spFMGetObject")]
		public ISingleResult<File> spFMGetObject([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DirPath", DbType="VarChar(MAX)")] string dirPath, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FileName", DbType="VarChar(MAX)")] string fileName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsDirectory", DbType="Bit")] System.Nullable<bool> isDirectory)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dirPath, fileName, isDirectory);
			return ((ISingleResult<File>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[File]")]
	public partial class File
	{
		
		private long _Id;
		
		private string _Name;
		
		private System.Nullable<bool> _IsDirectory;
		
		private System.Data.Linq.Binary _Data;
		
		private System.Nullable<System.DateTime> _LastModifiedTime;
		
		private System.Nullable<System.DateTime> _CreationTime;
		
		private System.Nullable<short> _Attributes;
		
		private string _Extension;
		
		private System.Nullable<bool> _IsZipped;
		
		private System.Nullable<bool> _IsEncrypted;
		
		private System.Nullable<long> _OriginalSize;
		
		private long _ParentId;
		
		private short _Permissions;
		
		private string _FullName;
		
		public File()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDirectory", DbType="Bit")]
		public System.Nullable<bool> IsDirectory
		{
			get
			{
				return this._IsDirectory;
			}
			set
			{
				if ((this._IsDirectory != value))
				{
					this._IsDirectory = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this._Data = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedTime
		{
			get
			{
				return this._LastModifiedTime;
			}
			set
			{
				if ((this._LastModifiedTime != value))
				{
					this._LastModifiedTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this._CreationTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attributes", DbType="SmallInt")]
		public System.Nullable<short> Attributes
		{
			get
			{
				return this._Attributes;
			}
			set
			{
				if ((this._Attributes != value))
				{
					this._Attributes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Extension", DbType="NChar(10)")]
		public string Extension
		{
			get
			{
				return this._Extension;
			}
			set
			{
				if ((this._Extension != value))
				{
					this._Extension = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsZipped", DbType="Bit")]
		public System.Nullable<bool> IsZipped
		{
			get
			{
				return this._IsZipped;
			}
			set
			{
				if ((this._IsZipped != value))
				{
					this._IsZipped = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEncrypted", DbType="Bit")]
		public System.Nullable<bool> IsEncrypted
		{
			get
			{
				return this._IsEncrypted;
			}
			set
			{
				if ((this._IsEncrypted != value))
				{
					this._IsEncrypted = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalSize", DbType="BigInt")]
		public System.Nullable<long> OriginalSize
		{
			get
			{
				return this._OriginalSize;
			}
			set
			{
				if ((this._OriginalSize != value))
				{
					this._OriginalSize = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="BigInt NOT NULL")]
		public long ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this._ParentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Permissions", DbType="SmallInt NOT NULL")]
		public short Permissions
		{
			get
			{
				return this._Permissions;
			}
			set
			{
				if ((this._Permissions != value))
				{
					this._Permissions = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this._FullName = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
